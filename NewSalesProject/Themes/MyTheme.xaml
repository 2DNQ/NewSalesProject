<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:NewSalesProject.Controls"
                    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
                    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
                    xmlns:local="clr-namespace:NewSalesProject.Themes">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="CurrencyTextbox.xaml"/>
        <ResourceDictionary Source="ToggleRadioButton.xaml"/>
        <ResourceDictionary Source="NumberInsideButton.xaml"/>
        <ResourceDictionary Source="MyChip.xaml"/>
        <ResourceDictionary Source="EmbeddedDialogHost.xaml"/>
        <ResourceDictionary Source="CustomDataGridStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type controls:MenuChevron}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:MenuChevron}">
                    <Grid>
                        <StackPanel Margin="{TemplateBinding Margin}" Orientation="Horizontal">
                            <Polygon Margin="0" Stretch="Fill" Points="0, 0 10, 0 10, 40 0, 40 10, 20" Fill="{TemplateBinding Background}"/>
                            <Border Margin="0" Background="{TemplateBinding Background}">
                                <TextBlock  HorizontalAlignment="Center" VerticalAlignment="Center" Padding="10 0" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Text}"/>
                            </Border>
                            <Polygon Margin="0" Stretch="Fill" Points="0, 0 10, 20 0, 40" Fill="{TemplateBinding Background}"/>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImageButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="Padding" Value="2"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="wpf:RippleAssist.Feedback" Value="LightSalmon" />
        <Setter Property="wpf:ShadowAssist.ShadowDepth" Value="Depth0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(wpf:ShadowAssist.CacheMode)}">
                            <Grid>
                                <Border Background="{TemplateBinding Background}" CornerRadius="2"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"                                    
                                        x:Name="border"
                                        Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ShadowAssist.ShadowDepth), Converter={x:Static converters:ShadowConverter.Instance}}" />
                            </Grid>
                        </AdornerDecorator>
                        <wpf:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"     
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Padding="{TemplateBinding Padding}" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="wpf:ShadowAssist.Darken" Value="True" />
                            <Setter Property="wpf:ShadowAssist.ShadowDepth" Value="Depth2" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="border" Property="wpf:ShadowAssist.Darken" Value="True" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.23"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainMenuImageButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="Padding" Value="4 2"/>
        <Setter Property="Height" Value="auto"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="2 4"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="wpf:RippleAssist.Feedback" Value="White" />
        <Setter Property="wpf:ShadowAssist.ShadowDepth" Value="Depth0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(wpf:ShadowAssist.CacheMode)}">
                            <Grid>
                                <Border Background="{TemplateBinding Background}" CornerRadius="2"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"                                    
                                        x:Name="border"
                                        Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ShadowAssist.ShadowDepth), Converter={x:Static converters:ShadowConverter.Instance}}" />
                            </Grid>
                        </AdornerDecorator>
                        <wpf:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"     
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Padding="{TemplateBinding Padding}" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#66ccff"/>
                            <Setter TargetName="border" Property="wpf:ShadowAssist.Darken" Value="True" />
                            <Setter Property="wpf:ShadowAssist.ShadowDepth" Value="Depth1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="border" Property="wpf:ShadowAssist.Darken" Value="True" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.23"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style TargetType="{x:Type TextBox}" x:Key="DefaultTextBox"/>
    <Style TargetType="{x:Type ComboBox}" x:Key="DefaultComboBox"/>
    <Style TargetType="{x:Type GroupBox}" x:Key="DefaultGroupBox"/>
    <Style TargetType="{x:Type Button}" x:Key="DefaultButton"/>
    <Style TargetType="{x:Type PasswordBox}" x:Key="DefaultPasswordBox"/>

</ResourceDictionary>