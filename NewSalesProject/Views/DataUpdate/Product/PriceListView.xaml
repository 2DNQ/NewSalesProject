<UserControl x:Class="NewSalesProject.Views.PriceListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NewSalesProject.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:wpfTool="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:support="clr-namespace:NewSalesProject.Supports"
             xmlns:converters="clr-namespace:NewSalesProject.Converters"
             xmlns:properties="clr-namespace:NewSalesProject.Properties"
             xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
             xmlns:controls="clr-namespace:NewSalesProject.Controls"
             xmlns:behaviors="clr-namespace:NewSalesProject.Behavior"
             xmlns:global="clr-namespace:NewSalesProject"
             x:Name="uc"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="600">
    <UserControl.Resources>
        <Storyboard x:Key="DetailsBarSlideIn">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DetailsBar">
                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="DetailsBar">
                <EasingDoubleKeyFrame KeyTime="0" Value="50"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="DetailsBarSlideOut">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="DetailsBar">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="50"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DetailsBar">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>

        <DataTemplate x:Key="DtGridRowDetailTemplate">
            <Border DockPanel.Dock="Bottom" Background="#99e6ff" BorderThickness="0 1 0 0" Padding="2 0 2 2">
                <Border.BorderBrush>
                    <VisualBrush>
                        <VisualBrush.Visual>
                            <Rectangle StrokeDashArray="4 2" Stroke="DarkGray" StrokeThickness="1"
                                              Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                                              Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"/>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Border.BorderBrush>
                <Border.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Margin" Value="2 0"/>
                    </Style>
                </Border.Resources>
                <ContentControl Padding="2" FontFamily="Candara" Foreground="DarkBlue" FontStyle="Italic">
                    <DockPanel>
                        <DockPanel DockPanel.Dock="Right">
                            <StackPanel VerticalAlignment="Center" DockPanel.Dock="Right" Orientation="Horizontal">
                                <Button Visibility="{Binding IsEditable, Converter={StaticResource BooleanToVisibilityConverter}}" 
                                        Margin="2" Background="#99e6ff" Style="{StaticResource ImageButton}" 
                                        CommandParameter="Save"
                                        Command="{Binding DataContext.ProductPriceVM.CRUDCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}">
                                    <Image Source="/NewSalesProject;component/Images/Save.png"/>
                                </Button>
                                <Button Visibility="{Binding IsEditable, Converter={StaticResource BooleanToVisibilityConverter}}"
                                        Margin="2" Background="#99e6ff" Style="{StaticResource ImageButton}"
                                        CommandParameter="CancelEdit"
                                        Command="{Binding DataContext.ProductPriceVM.CRUDCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}">
                                    <Image Source="/NewSalesProject;component/Images/Cancel.png"/>
                                </Button>

                            </StackPanel>
                            <CheckBox IsHitTestVisible="{Binding IsEditable}" IsChecked="{Binding IsTaxIncluding, UpdateSourceTrigger=PropertyChanged}" Margin="2" Padding="2" HorizontalAlignment="Right" VerticalAlignment="Center" Content="Price Including Tax"/>
                        </DockPanel>

                        <DockPanel>
                            <DockPanel  DockPanel.Dock="Top">
                                <DockPanel>
                                    <TextBlock Text="Price ID: "/>
                                    <TextBlock HorizontalAlignment="Right" Text="{Binding Code}"/>
                                </DockPanel>
                                <DockPanel HorizontalAlignment="Center">
                                    <TextBlock Text="Product Code: "/>
                                    <TextBlock Text="{Binding Product.Code}" TextDecorations="Underline"/>
                                </DockPanel>

                            </DockPanel>
                            <DockPanel>
                                <TextBlock Text="Note: " VerticalAlignment="Center"/>
                                <TextBox Margin="2" IsReadOnly="{Binding IsEditable, Converter={x:Static converters:Bool2ReverseBoolConverter.Instance}}" VerticalAlignment="Center" TextWrapping="Wrap" Text="{Binding Note, UpdateSourceTrigger=PropertyChanged}" FontStyle="Italic"/>
                            </DockPanel>
                        </DockPanel>
                    </DockPanel>
                </ContentControl>
            </Border>
        </DataTemplate>
    </UserControl.Resources>



    <Grid Background="White">
        <DockPanel>
            <Grid DockPanel.Dock="Top" Background="LightSkyBlue">
                <TextBlock TextElement.FontWeight="Bold" HorizontalAlignment="Center" Text="PRODUCT PRICE LIST" Margin="4"/>
            </Grid>
            <DockPanel Margin="0 10 0 2" DockPanel.Dock="Top">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <DockPanel>
                        <GroupBox Margin="2" BorderThickness="2" Header="Currency Setting" BorderBrush="#ffccee" Style="{StaticResource DefaultGroupBox}" Grid.Column="1">
                            <GroupBox.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding}" FontWeight="Bold" Margin="2 0"/>
                                </DataTemplate>
                            </GroupBox.HeaderTemplate>
                            <Grid Margin="4 2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Width" Value="100"/>
                                    </Style>
                                    <Style TargetType="DockPanel">
                                        <Setter Property="Margin" Value="1"/>
                                    </Style>
                                </Grid.Resources>
                                <StackPanel>
                                    <DockPanel>
                                        <TextBlock Text="JPY(¥) → VND(₫)"/>
                                        <controls:CurrencyTextbox Currency="₫" OriginText="{Binding ProductPriceVM.JPYRate}" MinWidth="60"/>
                                    </DockPanel>
                                    <DockPanel>
                                        <TextBlock Text="USD($) → VND(₫)"/>
                                        <controls:CurrencyTextbox Currency="₫" OriginText="{Binding ProductPriceVM.USDRate}"/>
                                    </DockPanel>
                                    <DockPanel>
                                        <TextBlock Text="EUR(€) → VND(₫)"/>
                                        <controls:CurrencyTextbox Currency="₫" OriginText="{Binding ProductPriceVM.EURRate}"/>
                                    </DockPanel>
                                </StackPanel>

                                <StackPanel Grid.Column="1">
                                    <StackPanel.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                            <Setter Property="TextAlignment" Value="Right"/>
                                            <Setter Property="Width" Value="40"/>
                                            <Setter Property="Margin" Value="4 0 8 0"/>
                                        </Style>
                                    </StackPanel.Resources>
                                    <DockPanel>
                                        <TextBlock Text="Tax"/>
                                        <controls:CurrencyTextbox Currency="%" OriginText="{Binding ProductPriceVM.JPYTax}" MinWidth="40"/>
                                    </DockPanel>
                                    <DockPanel>
                                        <TextBlock Text="Tax"/>
                                        <controls:CurrencyTextbox Currency="%" OriginText="{Binding ProductPriceVM.USDTax}"/>
                                    </DockPanel>
                                    <DockPanel>
                                        <TextBlock Text="Tax"/>
                                        <controls:CurrencyTextbox Currency="%" OriginText="{Binding ProductPriceVM.EURTax}"/>
                                    </DockPanel>
                                </StackPanel>
                            </Grid>
                        </GroupBox>
                        <GroupBox Margin="2 0 2 4" materialDesign:ColorZoneAssist.Mode="PrimaryLight" Header="Price List Setting" Padding="4">
                            <StackPanel>
                                <CheckBox Name="VisibleDetailCheckbox" Checked="VisibleDetailCheckbox_Checked" Unchecked="VisibleDetailCheckbox_Unchecked" Content="Visible all Price Details"/>
                                <CheckBox Content="Minus Point when caculate Real Price"/>
                                <TextBlock Margin="2 6 2 0" Text="Visible Checked Currency"/>
                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                    <CheckBox Margin="10 2" IsChecked="{Binding ProductPriceVM.JPYFilter}" Content="JPY(¥)"/>
                                    <CheckBox Margin="10 2" IsChecked="{Binding ProductPriceVM.USDFilter}" Content="USD($)"/>
                                    <CheckBox Margin="10 2" IsChecked="{Binding ProductPriceVM.EURFilter}" Content="EUR(€)"/>
                                </StackPanel>

                            </StackPanel>
                        </GroupBox>

                    </DockPanel>

                    <DockPanel Grid.Row="1">
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" HorizontalAlignment="Right">
                            <Button IsEnabled="{Binding SelectedItem, Converter={x:Static converters:NullToBooleanConverter.Instance}}" Click="Button_Click" Command="{Binding ProductPriceVM.CRUDCommand}" CommandParameter="CreateNew" Margin="4 2" Padding="4" Background="#ffccff" BorderBrush="Orchid">
                                <materialDesign:PackIcon Kind="Add" Height="24" Width="24" Foreground="DarkOrchid"/>
                            </Button>
                            <Button Margin="4 2" Style="{StaticResource ImageButton}" Command="{Binding ProductPriceVM.CRUDCommand}" CommandParameter="Refresh">
                                <Image Source="/NewSalesProject;component/Images/Refresh.png"/>
                            </Button>
                            <Button Name="EditButton" Margin="4 2" Command="{Binding ProductPriceVM.CRUDCommand}" CommandParameter="Edit">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource ImageButton}">
                                        <Setter Property="IsEnabled" Value="{Binding ProductPriceVM.SelectedItem.IsEditable, Converter={x:Static converters:Bool2ReverseBoolConverter.Instance}}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ProductPriceVM.SelectedItem}" Value="{x:Null}">
                                                <Setter Property="Button.IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Image Source="/NewSalesProject;component/Images/Edit.ico"/>
                            </Button>
                            <Button Name="DeleteButton" Margin="4 2" Command="{Binding ProductPriceVM.CRUDCommand}" CommandParameter="Delete">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource ImageButton}">
                                        <Setter Property="IsEnabled" Value="{Binding ProductPriceVM.SelectedItem.IsEditable, Converter={x:Static converters:Bool2ReverseBoolConverter.Instance}}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ProductPriceVM.SelectedItem}" Value="{x:Null}">
                                                <Setter Property="Button.IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Image Source="/NewSalesProject;component/Images/NewDelete.ico"/>
                            </Button>
                            <Button Name="DeleteAllButton" Margin="4 2" Command="{Binding ProductPriceVM.CRUDCommand}" CommandParameter="DeleteAll">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource ImageButton}">
                                        <Setter Property="IsEnabled" Value="{Binding ElementName=ProductPriceDtGrid, Path=ItemsSource.Count}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ProductPriceVM.SelectedItem.IsEditable}" Value="True">
                                                <Setter Property="Button.IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Image Source="/NewSalesProject;component/Images/DeleteAll.ico"/>
                            </Button>
                        </StackPanel>
                        
                        <DockPanel>
                            <TextBlock FontStyle="Italic" FontWeight="Thin" Padding="2 0" Background="#ffe6cc" TextWrapping="Wrap" Width="70" Margin="2 2 0 2" TextAlignment="Center" Text="Search by Store name"/>
                            <TextBox VerticalContentAlignment="Center" Padding="2" BorderThickness="0" Background="#b3e6ff" Width="200" Margin="0 2 2 2"/>

                            <StackPanel Orientation="Horizontal">
                                <Button BorderBrush="#0080ff" Padding="10 2" DockPanel.Dock="Right" Margin="2">
                                    <materialDesign:PackIcon Kind="DatabaseSearch" Width="20" Height="20"/>
                                </Button>
                                <Button Background="PeachPuff" Padding="10 2" BorderBrush="LightSalmon" DockPanel.Dock="Right" Margin="2">
                                    <materialDesign:PackIcon Kind="FilterRemove" Foreground="Salmon" Width="20" Height="20"/>
                                </Button>
                                <Separator Margin="4 2" Width="2" Background="#80bfff" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                            </StackPanel>
                        </DockPanel>

                    </DockPanel>


                </Grid>
                <!--<ContentControl>
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Margin" Value="2"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Style>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBox}">
                                <Setter Property="Margin" Value="2"/>
                                <Setter Property="Padding" Value="2"/>
                            </Style>
                            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource DefaultComboBox}">
                                <Setter Property="Margin" Value="2"/>
                                <Setter Property="Padding" Value="2"/>
                            </Style>
                        </Grid.Resources>
                        <GroupBox materialDesign:ColorZoneAssist.Mode="PrimaryLight" Header="Add To Receipt" Padding="4">
                            <StackPanel>
                                <CheckBox>
                                    <TextBlock Text="Price Included Tax"/>
                                </CheckBox>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Purchased Price"/>
                                    <TextBox Margin="0 0 10 0" Grid.Column="1" Text="{Binding NewReDtail.Quantity}"/>
                                    <TextBlock Margin="20 0 0 0" Grid.Column="2" Text="Quantity"/>
                                    <wpfTool:IntegerUpDown Grid.Column="3" Margin="2" Text="{Binding NewReDtail.Quantity}"/>

                                    <TextBlock Grid.Row="1" Text="Discount Percent"/>
                                    <DockPanel Grid.Row="1" Grid.Column="1" Margin="0 0 10 0">
                                        <TextBlock Text="%" DockPanel.Dock="Right"/>
                                        <TextBox Text="{Binding NewReDtail.Quantity}"/>
                                    </DockPanel>
                                    <TextBlock Margin="20 0 0 0" Text="Coupon" Grid.Row="1" Grid.Column="2"/>
                                    <TextBox Grid.Column="3" Grid.Row="1" Text="{Binding NewReDtail.Quantity}"/>
                                </Grid>
                                <TextBlock Text="Purchased from Store"/>
                                <ComboBox/>
                            </StackPanel>
                        </GroupBox>

                        <Grid VerticalAlignment="Bottom">
                            <Button Padding="10 2" Margin="10 4" HorizontalAlignment="Left" Foreground="White">
                                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                    <materialDesign:PackIcon Margin="0 0 4 0" VerticalAlignment="Center" Kind="Clear"/>
                                    <TextBlock Text="Clear"/>
                                </StackPanel>
                            </Button>
                            <Button Padding="10 2" Margin="10 4" HorizontalAlignment="Right" Foreground="White">
                                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                    <materialDesign:PackIcon Margin="0 0 4 0" VerticalAlignment="Center" Kind="Add"/>
                                    <TextBlock Text="Add"/>
                                </StackPanel>
                            </Button>
                        </Grid>
                    </Grid>
                </ContentControl>-->
            </DockPanel>

            <Border Visibility="Collapsed" Name="DetailsBar" DockPanel.Dock="Bottom" Height="50" Background="#ffe6cc" BorderThickness="0 1 0 0" BorderBrush="LightGray">
                <Border.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Border.RenderTransform>
                <DockPanel>

                    <DockPanel Margin="4" VerticalAlignment="Center">
                        <TextBlock TextAlignment="Center" FontWeight="SemiBold" FontFamily="Cambria"  Text="Price ID" DockPanel.Dock="Top"/>
                        <TextBlock Text="{Binding SelectedItem.Code, ElementName=ProductPriceDtGrid}" VerticalAlignment="Center"/>

                    </DockPanel>

                    <DockPanel Margin="4">
                        <Separator Margin="4" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Width="2"/>
                        <TextBlock Margin="4 0" FontWeight="SemiBold" FontFamily="Cambria" Width="130" TextWrapping="Wrap" TextAlignment="Center" VerticalAlignment="Center" Text="Add this Product with above Price to Wish List"/>

                        <DockPanel>
                            <TextBlock Margin="10 2 2 2" Text="Quantity" VerticalAlignment="Center"/>
                            <wpfTool:IntegerUpDown Name="QuantityTextbox" Margin="2 0" MinWidth="70" Minimum="1" VerticalAlignment="Center"/>
                        </DockPanel>

                        <Button Command="{Binding AddProductPriceToWishListCommand}" 
                                CommandParameter="{Binding ElementName=QuantityTextbox, Path=Text}" 
                                Background="#ffe6cc" Margin="20 2 4 2" Style="{StaticResource ImageButton}">
                            <Image Source="/NewSalesProject;component/Images/AddPrice.ico"/>
                        </Button>

                        <Separator Margin="4" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Width="2"/>
                    </DockPanel>


                    <StackPanel Margin="4" VerticalAlignment="Center" DockPanel.Dock="Right">
                        <TextBlock FontWeight="SemiBold" FontFamily="Cambria" Text="Change Currency"/>
                        <ComboBox ItemsSource="{x:Static support:DataAccess.CurrencyCodeList}"
                                  IsEnabled="{Binding ProductPriceVM.SelectedItem.IsEditable}"
                                  SelectedItem="{Binding ElementName=ProductPriceDtGrid, Path=SelectedItem.CurrencySymbol, Converter={x:Static converters:CurrencyToSymbolConverter.Instance}}"/>
                    </StackPanel>
                    
                    <StackPanel Orientation="Horizontal">
                        <!--<Button Background="#ffe6cc" Style="{StaticResource ImageButton}" DockPanel.Dock="Right" Command="{Binding DataContext.AddToReceiptCommand, ElementName=ProductPriceDtGrid}">
                            <Image Source="/NewSalesProject;component/Images/Edit.ico"/>
                        </Button>
                        
                        <Button Margin="2" Background="#ffe6cc" Style="{StaticResource ImageButton}" DockPanel.Dock="Right" Command="{Binding DataContext.AddToReceiptCommand, ElementName=ProductPriceDtGrid}">
                            <Image Source="/NewSalesProject;component/Images/Save.png"/>
                        </Button>-->
                    </StackPanel>

                </DockPanel>
            </Border>



            <Grid DockPanel.Dock="Top">
                <DataGrid DockPanel.Dock="Top" 
                      AutoGenerateColumns="False"
                      Name="ProductPriceDtGrid"
                      CanUserAddRows="False"
                      SelectionChanged="ProductPriceDtGrid_SelectionChanged"
                      GridLinesVisibility="None"
                      ItemsSource="{Binding ProductPriceVM.ViewItems}"
                      SelectedItem="{Binding ProductPriceVM.SelectedItem}"
                      ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}" 
                      RowDetailsTemplate="{DynamicResource DtGridRowDetailTemplate}" 
                      CellStyle="{DynamicResource DataGridCellStyle1}" 
                      Style="{DynamicResource DataGridStyle1}" 
                      RowStyle="{DynamicResource DataGridRowStyle1}">
                    <DataGrid.Columns>

                        <!--Store Name-->
                        <DataGridTemplateColumn SortMemberPath=".Store.Name" Width="*">
                            <DataGridTemplateColumn.Header>
                                <Border>
                                    <TextBlock Margin="4 2" TextAlignment="Left" Text="Store Name"/>
                                </Border>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Store.Name}" Margin="4 0" TextWrapping="Wrap" VerticalAlignment="Center"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--Price-->
                        <DataGridTemplateColumn SortMemberPath=".Price" Width="83">
                            <DataGridTemplateColumn.Header>
                                <Border>
                                    <TextBlock Text="Price" Margin="4 2" TextAlignment="Right"/>
                                </Border>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <controls:NumberTextbox OriginText="{Binding Price}" Currency="{Binding CurrencySymbol}"
                                                    Visibility="{Binding IsEditable, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                                        <StackPanel VerticalAlignment="Center">
                                            <TextBlock Foreground="DimGray" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="2" 
                                                   behaviors:TextBlockFormatChangeBehavior.CurrencySymbol="{Binding CurrencySymbol}" 
                                                   Visibility="{Binding IsEditable, Converter={StaticResource ReverseBoolean2VisibilityConverter}}" 
                                                   Text="{Binding Price, StringFormat={}{0:C}}"/>
                                            <TextBlock FontWeight="DemiBold" Foreground="ForestGreen" FontStyle="Italic" Margin="2 0 2 2" HorizontalAlignment="Right" 
                                                   Visibility="{Binding IsEditable, Converter={StaticResource ReverseBoolean2VisibilityConverter}}" 
                                                   Text="{Binding ExchangePrice, ConverterCulture={x:Static global:App.VietNamCurrency}, StringFormat={}{0:C0}}"/>
                                        </StackPanel>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--Discount(%)-->
                        <DataGridTemplateColumn SortMemberPath=".Discount" Width="57">
                            <DataGridTemplateColumn.Header>
                                <Border>
                                    <TextBlock Text="Discount" Margin="4 2" TextAlignment="Right"/>
                                </Border>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <!--<controls:NumberTextbox Text="{Binding Discount, StringFormat={}{0:N1}%}" Margin="0"
                                            Visibility="{Binding IsEditable, Converter={StaticResource BooleanToVisibilityConverter}}" />-->
                                        <controls:NumberTextbox OriginText="{Binding Discount}" Currency="%"
                                                    Visibility="{Binding IsEditable, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                                        <TextBlock Foreground="DimGray" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="4 8" 
                                                   Visibility="{Binding IsEditable, Converter={StaticResource ReverseBoolean2VisibilityConverter}}" 
                                                   Text="{Binding Discount, StringFormat={}{0:N1}%}"/>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--Coupon-->
                        <DataGridTemplateColumn SortMemberPath=".Coupon" Width="60">
                            <DataGridTemplateColumn.Header>
                                <Border>
                                    <TextBlock Text="Coupon" Margin="4 2" TextAlignment="Right"/>
                                </Border>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <!--<controls:NumberTextbox Text="{Binding Coupon, StringFormat={}{0:C}}" Margin="0"
                                            Visibility="{Binding IsEditable, Converter={StaticResource BooleanToVisibilityConverter}}" 
                                            behaviors:TextBlockFormatChangeBehavior.CurrencySymbol="{Binding CurrencySymbol}"/>-->
                                        <controls:NumberTextbox OriginText="{Binding Coupon}" Currency="{Binding CurrencySymbol}"
                                                    Visibility="{Binding IsEditable, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                                        <TextBlock Foreground="DimGray" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="4 8" 
                                                   behaviors:TextBlockFormatChangeBehavior.CurrencySymbol="{Binding CurrencySymbol}" 
                                                   Visibility="{Binding IsEditable, Converter={StaticResource ReverseBoolean2VisibilityConverter}}" 
                                                   Text="{Binding Coupon, StringFormat={}{0:C}}"/>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--Point-->
                        <DataGridTemplateColumn SortMemberPath=".Point" Width="50">
                            <DataGridTemplateColumn.Header>
                                <Border>
                                    <TextBlock Text="Point" Margin="4 2" TextAlignment="Right"/>
                                </Border>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <!--<controls:NumberTextbox Text="{Binding Point, StringFormat={}{0:N0}}" Margin="0"
                                            Visibility="{Binding IsEditable, Converter={StaticResource BooleanToVisibilityConverter}}"/>-->
                                        <controls:NumberTextbox OriginText="{Binding Point}" Currency="number"
                                                    Visibility="{Binding IsEditable, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                                        <TextBlock Foreground="DimGray" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="4 8" 
                                                   Visibility="{Binding IsEditable, Converter={StaticResource ReverseBoolean2VisibilityConverter}}" 
                                                   Text="{Binding Point, StringFormat={}{0:N0}}"/>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--Tax-->
                        <DataGridTemplateColumn Width="50">
                            <DataGridTemplateColumn.Header>
                                <Border>
                                    <TextBlock Text="Tax" Margin="4 2" TextAlignment="Right"/>
                                </Border>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <TextBlock Foreground="DimGray" Visibility="{Binding IsTaxIncluding, Converter={StaticResource ReverseBoolean2VisibilityConverter}}" VerticalAlignment="Center" Margin="4 8" HorizontalAlignment="Right" Text="{Binding Tax, StringFormat={}{0:N1}%}"/>
                                        <TextBlock Foreground="DimGray" Text="*" Visibility="{Binding IsTaxIncluding, Converter={StaticResource BooleanToVisibilityConverter}}" VerticalAlignment="Center" Margin="4 8" HorizontalAlignment="Right"/>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--Real Price-->
                        <DataGridTemplateColumn SortMemberPath=".ExchangeRealPrice" Width="90">
                            <DataGridTemplateColumn.Header>
                                <Border>
                                    <TextBlock Text="Real Price" Margin="4 2" TextAlignment="Right"/>
                                </Border>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel VerticalAlignment="Center">
                                        <TextBlock Foreground="DimGray" Margin="2" HorizontalAlignment="Right" 
                                                   behaviors:TextBlockFormatChangeBehavior.CurrencySymbol="{Binding CurrencySymbol}"
                                                   Text="{Binding RealPrice, StringFormat={}{0:C}}"/>
                                        <TextBlock FontWeight="DemiBold" Foreground="ForestGreen" FontStyle="Italic" Margin="2 0 2 2" HorizontalAlignment="Right" 
                                                   Text="{Binding ExchangeRealPrice, ConverterCulture={x:Static global:App.VietNamCurrency}, StringFormat={}{0:C0}}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--Currency Symbol-->
                        <DataGridTemplateColumn SortMemberPath=".CurrencySymbol" Width="30">
                            <DataGridTemplateColumn.Header>
                                <Border>
                                    <TextBlock Text="$$" Margin="4 2" TextAlignment="Right"/>
                                </Border>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <TextBlock VerticalAlignment="Center" Margin="4 8" HorizontalAlignment="Center" Text="{Binding CurrencySymbol}"/>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                    </DataGrid.Columns>

                </DataGrid>


                <controls:CRUDStateCard VerticalAlignment="Bottom" Margin="0 10" CRUDType="{Binding ProductPriceVM.CRUDType}" CardState="{Binding ProductPriceVM.CRUDState}"/>


                <controls:MySpinner x:Name="Spinner" 
                                BackgroundOpacity="0.6"
                                SpinnerState="{Binding DataContext.ProductPriceVM.DataGridSpinnerState, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" 
                                StateMode="{Binding DataContext.ProductPriceVM.DataGridState, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>

            </Grid>

            

        </DockPanel>
    </Grid>
</UserControl>
