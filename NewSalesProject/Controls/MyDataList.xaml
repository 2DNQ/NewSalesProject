<UserControl x:Class="NewSalesProject.Controls.MyDataList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:controls="clr-namespace:NewSalesProject.Controls"
             xmlns:converters="clr-namespace:NewSalesProject.Converters"
             xmlns:behaviors="clr-namespace:NewSalesProject.Behavior"
             xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
             Name="uc"
             mc:Ignorable="d" 
             d:DesignHeight="400" d:DesignWidth="400">
    <DockPanel Margin="2" Background="White">
        <StatusBar DockPanel.Dock="Bottom" Background="Beige">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem>
                <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                    <TextBlock Text="{Binding ElementName=DtGrid, Path=ItemsSource.Count, Mode=OneWay, Converter={x:Static converters:CountToItemsConverter.Instance}}"/>
                    <StackPanel Orientation="Horizontal" Visibility="{Binding ElementName=uc, Path=IsFiltered, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Separator Margin="4 0" Width="2" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Background="DimGray"/>
                        <TextBlock Background="LightSalmon" Padding="6 0" Text="Filtered"/>
                    </StackPanel>
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem HorizontalContentAlignment="Stretch">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <CheckBox Name="AutoUpdateCheckbox" Unchecked="AutoUpdateCheckbox_Unchecked" Checked="AutoUpdateCheckbox_Checked" IsChecked="{Binding IsAutoUpdateEnable, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" Content="AutoUpdate" Margin="20 0"/>
                    <Button Click="Option_Click" Name="Option" Height="16" Width="16" Padding="0" materialDesign:ShadowAssist.ShadowDepth="Depth0">
                        <Button.ContextMenu>
                            <ContextMenu>
                                <ContextMenu.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <CheckBox Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked" IsChecked="{Binding IsChecked}" Content="{Binding HeaderName}"/>
                                        </Grid>
                                    </DataTemplate>
                                </ContextMenu.ItemTemplate>
                            </ContextMenu>
                        </Button.ContextMenu>
                        <materialDesign:PackIcon Kind="Menu" Height="12" Width="12" HorizontalAlignment="Center"/>
                    </Button>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>

        <TextBlock DockPanel.Dock="Top" Text="{Binding ElementName=uc, Path=Title}" Foreground="DarkSlateGray" TextDecorations="Underline" Margin="4" FontSize="20" HorizontalAlignment="Center"/>

        <DockPanel DockPanel.Dock="Top">

            <Button Name="ClearButton" Background="PeachPuff" Padding="10 2" BorderBrush="LightSalmon" DockPanel.Dock="Right" Margin="2"
                Command="{Binding ClearFilterCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="ClearFilter">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=uc, Path=IsFiltered}" Value="false">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <materialDesign:PackIcon Kind="FilterRemove" Foreground="Salmon" Width="20" Height="20"/>
            </Button>
            
            <Button Name="SearchButton" Command="{Binding FilterCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" 
                BorderBrush="#0080ff" Padding="10 2" DockPanel.Dock="Right" Margin="2" CommandParameter="Filter">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=SearchKeyworkTxt, Path=Text}" Value="">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <materialDesign:PackIcon Kind="DatabaseSearch" Width="20" Height="20"/>
            </Button>

            <Border BorderThickness="0 0 0 1" Margin="0 2" BorderBrush="LightGray">
                <TextBlock FontFamily="Calibri" VerticalAlignment="Center" TextAlignment="Center" Text="Choose Property" TextWrapping="Wrap" Width="60"/>
            </Border>

            <ComboBox SelectedItem="{Binding SearchProperty, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                      ItemsSource="{Binding SearchPropertyItemList, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                      DisplayMemberPath="HeaderName" 
                      Loaded="SearchPropertyCbb_Loaded"
                      Name="SearchPropertyCbb" 
                      VerticalAlignment="Stretch" 
                      BorderBrush="#4dc3ff"
                      BorderThickness="1" Margin="0 2 -2 2" 
                      VerticalContentAlignment="Center" 
                      MinWidth="80" MaxWidth="200" 
                      DockPanel.Dock="Left"/>
            <TextBox Name="SearchKeyworkTxt" 
                     BorderThickness="0"
                     Background="#b3e6ff"
                     KeyDown="SearchKeyworkTxt_KeyDown"
                     Text="{Binding SearchKeyWord, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" 
                     Margin="2" Padding="6 0" FontSize="16"/>
        </DockPanel>

        <Grid Name="HaveButtonGrid" DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Separator Width="1" HorizontalAlignment="Right" Margin="0 0 0 2" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"/>

            <StackPanel>
                <StackPanel.Resources>
                    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                        <Setter Property="Margin" Value="10"/>
                        <Setter Property="Padding" Value="0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=DtGrid, Path=SelectedItem}" Value="{x:Null}">
                                <Setter Property="Button.IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="materialDesign:PackIcon">
                        <Setter Property="Height" Value="24"/>
                        <Setter Property="Width" Value="24"/>
                    </Style>
                </StackPanel.Resources>
                <Button Name="RefreshButton" Style="{StaticResource MaterialDesignRaisedButton}" Margin="10" Padding="0" Command="{Binding RefreshCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="Refresh">
                    <materialDesign:PackIcon Kind="Refresh"/>
                </Button>
                <Button Name="AddButton" IsEnabled="False" Style="{StaticResource MaterialDesignRaisedButton}" Margin="10" Padding="0" Command="{Binding AddCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="CreateNew">
                    <materialDesign:PackIcon Kind="Plus"/>
                </Button>
                <Button Name="DeleteButton" Command="{Binding DeleteCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="Delete">
                    <materialDesign:PackIcon Kind="Delete"/>
                </Button>
                <Button Name="DeleteManyButton" Click="DeleteManyButton_Click">
                    <materialDesign:PackIcon Kind="DeleteSweep"/>
                </Button>
                <Button Name="DuplicateButton" Command="{Binding DuplicateItemCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="Duplicate">
                    <materialDesign:PackIcon Kind="ContentCopy"/>
                </Button>
            </StackPanel>

            <DataGrid Name="DtGrid" 
                      CanUserAddRows="False"
                      IsReadOnly="True"
                      Loaded="DtGrid_Loaded"
                      Unloaded="DtGrid_Unloaded"
                      DataContextChanged="DtGrid_DataContextChanged"
                      behaviors:DataGridBrowsableBehavior.UseBrowsableAttributeOnColumn="True"
                      ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" 
                      SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                      SelectedIndex="{Binding SelectedIndex, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                      AutoGeneratedColumns="DataGrid_AutoGeneratedColumns" 
                      SelectionChanged="DtGrid_SelectionChanged"
                      Grid.Column="1">
            </DataGrid>

            <Grid Grid.Column="1">
                <Button Margin="0 0 30 30" VerticalAlignment="Bottom" HorizontalAlignment="Right" 
                        Name="GetDetailsButton" Height="50" Opacity="0.5" Width="50" 
                        Command="{Binding UpdateDetailsCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                        CommandParameter="UpdateDetails"
                        Visibility="{Binding ElementName=AutoUpdateCheckbox, Path=IsChecked, Converter={x:Static converters:ReverseBoolean2VisibilityConverter.Instance}}"
                        PreviewMouseLeftButtonDown="GetDetailsButton_PreviewMouseLeftButtonDown"
                        PreviewMouseLeftButtonUp="GetDetailsButton_PreviewMouseLeftButtonUp"
                        PreviewMouseMove="GetDetailsButton_PreviewMouseMove"
                        Style="{StaticResource MaterialDesignFloatingActionAccentButton}"
                        ToolTip="MaterialDesignFloatingActionAccentButton">
                    <materialDesign:PackIcon Kind="Anchor" Height="24" Width="24"/>
                </Button>
            </Grid>

            <Grid Name="NoItemGrid" Grid.Column="1">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=DtGrid, Path=ItemsSource.Count}" Value="0" />
                                    <Condition Binding="{Binding ElementName=Spinner, Path=Visibility}" Value="Collapsed" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Grid.Visibility" Value="Visible" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <TextBlock Text="There are no any item now!" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Grid>

            <controls:MySpinner x:Name="Spinner" 
                                IsVisibleChanged="Spinner_IsVisibleChanged"
                                BackgroundOpacity="0.6"
                                SpinnerState="{Binding DataGridSpinnerState, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" 
                                StateMode="{Binding DataGridState, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" 
                                Grid.Column="1"/>

        </Grid>
    </DockPanel>

</UserControl>
