<Application x:Class="NewSalesProject.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:NewSalesProject"
             xmlns:enum="clr-namespace:NewSalesProject.Enum"
             xmlns:controls="clr-namespace:NewSalesProject.Controls"
             xmlns:properties="clr-namespace:NewSalesProject.Properties"
             xmlns:myconverters="clr-namespace:NewSalesProject.Converters"
             xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
             xmlns:views="clr-namespace:NewSalesProject.Views"
             xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
             StartupUri="Views/Home/Login.xaml">
            <!--StartupUri="Views/Home/MainWindow.xaml"-->
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.LightBlue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.LightGreen.xaml" />
                <ResourceDictionary Source="Themes/MyTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <myconverters:ViewModeToVisibilityConverter x:Key="ViewModeToVisibilityConverter"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <myconverters:CenterPopupConverter x:Key="CenterPopupConverter" />
            <myconverters:ReverseBoolean2VisibilityConverter x:Key="ReverseBoolean2VisibilityConverter" />
            <myconverters:MultiBindingToCommandParaObjectConverter x:Key="MultiBindingToCommandParaObjectConverter" />

            <SolidColorBrush x:Key="MainMenu.Separator.Background" Color="#ffaa00"/>
            <SolidColorBrush x:Key="MenuSeparator.Background" Color="#0099e6"/>

            <LinearGradientBrush x:Key="Menu.Background" StartPoint="0,0" EndPoint="2,1" >
                <GradientStop Color="#cce6ff" Offset="0" />
                <GradientStop Color="#99ccff" Offset="0.5" />
                <GradientStop Color="#cce6ff" Offset="1" />
            </LinearGradientBrush>


            <!-- Spinner Style, Fade Effect -->
            <Storyboard x:Key="FadeOut">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FadeIn">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

            <Style TargetType="{x:Type controls:MySpinner}">
                <Setter Property="Fill" Value="White"/>
                <Setter Property="SpinnerBackground" Value="Black"/>
                <Setter Property="BackgroundOpacity" Value="0.7"/>
                <Setter Property="Visibility" Value="Collapsed"/>
                <Style.Triggers>
                    <Trigger Property="StateMode" Value="{x:Static enum:ViewModeType.Busy}">
                        <Trigger.EnterActions>
                            <BeginStoryboard Storyboard="{StaticResource FadeIn}"/>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard Storyboard="{StaticResource FadeOut}" />
                        </Trigger.ExitActions>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type controls:CRUDStateCard}">
                <Setter Property="Visibility" Value="Collapsed"/>
                <Style.Triggers>
                    <Trigger Property="CardState" Value="{x:Static enum:CRUDCardState.Busy}">
                        <Trigger.EnterActions>
                            <BeginStoryboard Storyboard="{StaticResource FadeIn}"/>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard Storyboard="{StaticResource FadeOut}" />
                        </Trigger.ExitActions>
                    </Trigger>
                </Style.Triggers>
            </Style>



            <Style x:Key="TabViewContentStyle" TargetType="ContentControl">
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding ElementName=NewButton1, Path=IsChecked}" Value="False"/>
                            <Condition Binding="{Binding InEditItem}" Value="{x:Null}"/>
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="ContentControl.IsEnabled" Value="False"/>
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="TabViewContentStyle1" TargetType="ContentControl" BasedOn="{StaticResource TabViewContentStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=PriceListButton1, Path=IsChecked}" Value="True">
                        <Setter Property="ContentControl.IsEnabled" Value="True"/>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding ElementName=ReceiptInvoiceButton1, Path=IsChecked}" Value="True">
                        <Setter Property="ContentControl.IsEnabled" Value="True"/>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding ElementName=ReceiptsListButton1, Path=IsChecked}" Value="True">
                        <Setter Property="ContentControl.IsEnabled" Value="True"/>
                    </DataTrigger>

                </Style.Triggers>
            </Style>

            <Style x:Key="TabViewContentStyle2" TargetType="ContentControl" BasedOn="{StaticResource TabViewContentStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=PriceListButton2, Path=IsChecked}" Value="True">
                        <Setter Property="ContentControl.IsEnabled" Value="True"/>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding ElementName=ReceiptInvoiceButton2, Path=IsChecked}" Value="True">
                        <Setter Property="ContentControl.IsEnabled" Value="True"/>
                    </DataTrigger>
                    
                    <DataTrigger Binding="{Binding ElementName=ReceiptsListButton2, Path=IsChecked}" Value="True">
                        <Setter Property="ContentControl.IsEnabled" Value="True"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type views:EditView}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type views:EditView}">
                            <DockPanel Background="White">
                                <Grid DockPanel.Dock="Top" Background="LightSkyBlue">
                                    <TextBlock TextElement.FontWeight="Bold" HorizontalAlignment="Center" Text="{TemplateBinding Title}" Margin="4"/>
                                </Grid>
                                <Grid DockPanel.Dock="Bottom">
                                    <Button Name="EditButton" Command="{Binding CRUDCommand}" CommandParameter="Edit" Padding="10 2" Margin="10 4" HorizontalAlignment="Left" Foreground="White">
                                        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                            <wpf:PackIcon Margin="0 0 4 0" VerticalAlignment="Center" Kind="Edit"/>
                                            <TextBlock Text="Edit"/>
                                        </StackPanel>
                                    </Button>

                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                        <Button Visibility="Collapsed"
                                        Command="{Binding CRUDCommand}" 
                                        CommandParameter="UpdateDetails"
                                        Name="CancelButton" 
                                        Padding="10 2" Margin="10 4" 
                                        HorizontalAlignment="Right" Foreground="White">
                                            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                                <wpf:PackIcon Margin="0 0 4 0" VerticalAlignment="Center" Kind="Cancel"/>
                                                <TextBlock Text="Cancel"/>
                                            </StackPanel>
                                        </Button>
                                        <Button Visibility="Collapsed" Name="SaveButton" Command="{Binding CRUDCommand}" CommandParameter="Save" Padding="10 2" Margin="10 4" HorizontalAlignment="Right" Foreground="White">
                                            <Button.Style>
                                                <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding BindingItem.HasErrors, RelativeSource={RelativeSource AncestorType={x:Type views:EditView}}}" Value="true">
                                                            <Setter Property="IsEnabled" Value="False"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                                <wpf:PackIcon Margin="0 0 4 0" VerticalAlignment="Center" Kind="ContentSave"/>
                                                <TextBlock Text="Save"/>
                                            </StackPanel>
                                        </Button>
                                    </StackPanel>
                                </Grid>
                                <ContentPresenter/>
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style TargetType="{x:Type views:NewView}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type views:NewView}">
                            <DockPanel Background="White">
                                <Grid DockPanel.Dock="Top" Background="LightSkyBlue">
                                    <TextBlock TextElement.FontWeight="Bold" HorizontalAlignment="Center" Text="{TemplateBinding Title}" Margin="4"/>
                                </Grid>
                                <Grid DockPanel.Dock="Bottom">
                                    <Button Command="{Binding CRUDCommand}" CommandParameter="Add" Padding="20 2" Margin="10 4" HorizontalAlignment="Right" Foreground="White">
                                        <Button.Style>
                                            <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding BindingItem.HasErrors, RelativeSource={RelativeSource AncestorType={x:Type views:NewView}}}" Value="true">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                            <wpf:PackIcon Margin="0 0 4 0" VerticalAlignment="Center" Kind="Plus"/>
                                            <TextBlock Text="Add"/>
                                        </StackPanel>
                                    </Button>

                                    <Button Name="CancelButton" Padding="10 2" Margin="10 4" HorizontalAlignment="Left" Foreground="White">
                                        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                            <wpf:PackIcon Margin="0 0 4 0" VerticalAlignment="Center" Kind="Cancel"/>
                                            <TextBlock Text="Cancel"/>
                                        </StackPanel>
                                    </Button>
                                </Grid>
                                <ContentPresenter/>
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



        </ResourceDictionary>

        
    </Application.Resources>
    
    
</Application>
